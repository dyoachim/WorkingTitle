<header align='center'>
	<h1 class='titleize'><%= @book.title.titleize %></h1>
	<h3 class='titleize'><%= @book.author.titleize %></h3>
	<h3>
		<% if Vote.find_by(voter_id: session[:current_user_id], book_id: @book.id) %>
			<p class='vote_count' id='<%= @book.id %>'>
				Score: <%= @book.votes.sum('up_or_down')%>
			</p>
		<% elsif session[:current_user_id] != nil %>
			<button class='upvote'>↑</button>
			<p class='vote_count' id='<%= @book.id %>'>
				Score: <%= @book.votes.sum('up_or_down')%>
			</p>
			<button class='downvote'>↓</button>
    <% else %>
      <p class='vote_count' id='<%= @book.id %>'>
        Score: <%= @book.votes.sum('up_or_down')%>
      </p>
		<% end %>
	</h3>
</header>

<body>
<script src="http://d3js.org/d3.v3.min.js"></script>

<section class="d3_bubble">
<script>

var color = d3.scale.category20();

var diameter = 450,
// var	width = 650,
// var	height = 450,
    format = d3.format(",d"),
    color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);

var svg = d3.select(".d3_bubble").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

d3.json("/<%=@book.json_file_path%>", function(error, root) {
  var node = svg.selectAll(".node")
      .data(bubble.nodes(classes(root))
      .filter(function(d) { return !d.children; }))
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return d.className + ": " + format(d.value); });

  node.append("circle")
      .attr("r", function(d) { return d.r; })
      .style("fill",function(d) {
    return "hsl(" + Math.random() * 360 + ",100%,50%)";
    })

  node.append("text")
      .attr("dy", ".3em")
      .style("text-anchor", "middle")
      .text(function(d) { return d.className.substring(0, d.r / 3); });
});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
    else classes.push({packageName: name, className: node.name, value: node.size});
  }

  recurse(null, root);
  return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");
</script>

</section>

<section class='book_stats'>
	<ul>
		<li><span><%= @book.reading_level.floor(1) %></span><br>Reading Level</li><br>
		<li><span><%= @book.word_count %></span><br>Word Count</li><br>
		<li><span><%= @book.avg_word_length.floor(2) %></span><br>Average Word Length</li><br>
		<li><span><%= @book.avg_syllable_length.floor(2) %></span><br>Average Syllables Per Word</li><br>
		<li><span><%= @book.avg_sentence_length.floor(2) %></span><br>Average Sentence Length</li>
	</ul>
</section>

<div>
	<h2>Comments</h2>
	
	<% if flash[:error] %>
	  <%= flash[:error] %>
	<% end %>
	<%= render 'commentform' %>
	
	<ul style="padding-left: 0px">
  	<%= raw nest('', 0, @comments.select{|comment| comment.parent_id == nil}) %>
	</ul>
</div>
